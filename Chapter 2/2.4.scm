(define (my-cons x y) (lambda (m) (m x y)))
(define (my-car z) (z (lambda (p q) p)))
(define (my-cdr z) (z (lambda (p q) q)))

;(car (cons 3 6))             ; 3
(my-cdr (my-cons 5 7))






























;; Создай пару из 2 чисел и достань их посредством вызовы car cdr
;; И покажи как сработает интерпретаторт используя подстановочную модель. Вот и используй её
;; Т.е. твоя задача
;; Написать реализацию (она уже есть в книжке) и соответствующие селекторы
;; И с их помощью создать пару чисел любых и достать их
;; Используй только

;; My-car
;; My-cdr
;; My-cons

;; Чтобы запустить это дело

;; Во-первых Твои собственные функции My-car My-cdr Должны использоваться
;; В редакторе вообще не должно быть Cons car cdr
;; Создай пример Пару из 2 числе И достань их
;; Посредством вызовы car cdr
;; В книжке Тебя просят использовать car cdr cons
;; Смысл тот же, только назови их с префиксом my
;; И реализация должна бытб на фкнкциях На лямбдах
;; Все как в книжке Просто не cons А my-cons

;; Упражнение 2.4.
;; Вот еще одно процедурное представление для пар. Проверьте для этого представления, что при
;; любых двух объектах x и y (car (cons x y)) возвращает x.
;; Каково соответствующее определение cdr? (Подсказка: Чтобы проверить, что это работает, ис-
;; пользуйте подстановочную модель из раздела 1.1.5.)


