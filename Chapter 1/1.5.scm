(define (p) (p)) ;определяет процедуру, которая вычисляет саму себя

(define (test x y)
(if (= x 0)
0
y))

(test 0 (p)

#|При аппликативном порядке вычислений.
Когда интерпретатор попытается вычислить выражение (p), он:
замените каждый формальный параметр соответствующим аргументом в теле процедуры: так как формального параметра в данном случае нет, тело процедуры будет просто (p).
оценивает тело процедуры, которое будет (p)в нашем случае, что в свою очередь запускает оценку заново, создавая тем самым бесконечный цикл.

При нормальном порядке вычислений
«полностью расширит, а затем уменьшит». В этой модели интерпретатор не будет оценивать операнды, пока их значения действительно не понадобятся. В этом случае (test 0 (p))будет оцениваться следующим образом:

(test 0 (p))
будет расширен до:

(if (= 0 0)
    0
    (p))
Так как предикат (= 0 0)оценивается #t в if, то (p)он не будет оцениваться и результатом будет: 0

